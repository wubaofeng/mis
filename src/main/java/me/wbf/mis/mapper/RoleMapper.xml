<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.wbf.mis.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="me.wbf.mis.entity.Role">
        <id column="roleid" jdbcType="INTEGER" property="roleid"/>
        <result column="rolename" jdbcType="VARCHAR" property="rolename"/>
        <result column="roledis" jdbcType="VARCHAR" property="roledis"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    roleid, rolename, roledis, status
  </sql>
    <select id="selectByExample" parameterType="me.wbf.mis.entity.RoleExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
        where roleid = #{roleid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where roleid = #{roleid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="me.wbf.mis.entity.RoleExample">
        delete from role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="me.wbf.mis.entity.Role" useGeneratedKeys="true" keyProperty="roleid">
    insert into role (roleid, rolename, roledis, 
      status)
    values (#{roleid,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{roledis,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="me.wbf.mis.entity.Role" useGeneratedKeys="true" keyProperty="roleid">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleid != null">
                roleid,
            </if>
            <if test="rolename != null">
                rolename,
            </if>
            <if test="roledis != null">
                roledis,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleid != null">
                #{roleid,jdbcType=INTEGER},
            </if>
            <if test="rolename != null">
                #{rolename,jdbcType=VARCHAR},
            </if>
            <if test="roledis != null">
                #{roledis,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="me.wbf.mis.entity.RoleExample" resultType="java.lang.Long">
        select count(*) from role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update role
        <set>
            <if test="record.roleid != null">
                roleid = #{record.roleid,jdbcType=INTEGER},
            </if>
            <if test="record.rolename != null">
                rolename = #{record.rolename,jdbcType=VARCHAR},
            </if>
            <if test="record.roledis != null">
                roledis = #{record.roledis,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update role
        set roleid = #{record.roleid,jdbcType=INTEGER},
        rolename = #{record.rolename,jdbcType=VARCHAR},
        roledis = #{record.roledis,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="me.wbf.mis.entity.Role">
        update role
        <set>
            <if test="rolename != null">
                rolename = #{rolename,jdbcType=VARCHAR},
            </if>
            <if test="roledis != null">
                roledis = #{roledis,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where roleid = #{roleid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="me.wbf.mis.entity.Role">
        update role
        set rolename = #{rolename,jdbcType=VARCHAR},
          roledis = #{roledis,jdbcType=VARCHAR},
          status = #{status,jdbcType=INTEGER}
        where roleid = #{roleid,jdbcType=INTEGER}
    </update>
    <insert id="insertSourcesRole">
        insert into role_sources (role_fk,resources_fk) values
        <foreach collection="sids" item="sid" separator=",">
            (#{rid},#{sid})
        </foreach>
    </insert>

    <delete id="deleteSourcesByRid" parameterType="int">
        delete from role_sources where role_fk = #{rid}
    </delete>

    <delete id="deleteSourcesList" parameterType="string">
        delete from role_sources where role_fk in (${value})
    </delete>

    <delete id="deleteEmps" parameterType="string">
        delete from emp_role where role_fk in (${value})
    </delete>

    <delete id="deleteRoleList" parameterType="string">
        delete from role where roleid in (${value})
    </delete>

    <select id="selectRoleByEid" parameterType="int" resultMap="BaseResultMap">
        select * from role where roleid in
        (select role_fk from emp_role where emp_fk = #{eid})
    </select>
</mapper>